#ifndef __UOX3_ENUMS__
#define __UOX3_ENUMS__

enum UnicodeTypes
{
	ZERO = 0,
	UT_ARA,
	UT_ARI,
	UT_ARE,
	UT_ARL,
	UT_ARG,
	UT_ARM,
	UT_ART,
	UT_ARO,
	UT_ARY,
	UT_ARS,
	UT_ARJ,
	UT_ARB,
	UT_ARK,
	UT_ARU,
	UT_ARH,
	UT_ARQ,
	UT_BGR,
	UT_CAT,
	UT_CHT,
	UT_CHS,
	UT_ZHH,
	UT_ZHI,
	UT_ZHM,
	UT_CSY,
	UT_DAN,
	UT_DEU,
	UT_DES,
	UT_DEA,
	UT_DEL,
	UT_DEC,
	UT_ELL,
	UT_ENU,
	UT_ENG,
	UT_ENA,
	UT_ENC,
	UT_ENZ,
	UT_ENI,
	UT_ENS,
	UT_ENJ,
	UT_ENB,
	UT_ENL,
	UT_ENT,
	UT_ENW,
	UT_ENP,
	UT_ESP,
	UT_ESM,
	UT_ESN,
	UT_ESG,
	UT_ESC,
	UT_ESA,
	UT_ESD,
	UT_ESV,
	UT_ESO,
	UT_ESR,
	UT_ESS,
	UT_ESF,
	UT_ESL,
	UT_ESY,
	UT_ESZ,
	UT_ESB,
	UT_ESE,
	UT_ESH,
	UT_ESI,
	UT_ESU,
	UT_FIN,
	UT_FRA,
	UT_FRB,
	UT_FRC,
	UT_FRS,
	UT_FRL,
	UT_FRM,
	UT_HEB,
	UT_HUN,
	UT_ISL,
	UT_ITA,
	UT_ITS,
	UT_JPN,
	UT_KOR,
	UT_NLD,
	UT_NLB,
	UT_NOR,
	UT_NON,
	UT_PLK,
	UT_PTB,
	UT_PTG,
	UT_ROM,
	UT_RUS,
	UT_HRV,
	UT_SRL,
	UT_SRB,
	UT_SKY,
	UT_SQI,
	UT_SVE,
	UT_SVF,
	UT_THA,
	UT_TRK,
	UT_URP,
	UT_IND,
	UT_UKR,
	UT_BEL,
	UT_SLV,
	UT_ETI,
	UT_LVI,
	UT_LTH,
	UT_LTC,
	UT_FAR,
	UT_VIT,
	UT_HYE,
	UT_AZE,
	UT_EUQ,
	UT_MKI,
	UT_AFK,
	UT_KAT,
	UT_FOS,
	UT_HIN,
	UT_MSL,
	UT_MSB,
	UT_KAZ,
	UT_SWK,
	UT_UZB,
	UT_TAT,
	UT_BEN,
	UT_PAN,
	UT_GUJ,
	UT_ORI,
	UT_TAM,
	UT_TEL,
	UT_KAN,
	UT_MAL,
	UT_ASM,
	UT_MAR,
	UT_SAN,
	UT_KOK,
	TOTAL_LANGUAGES
};

enum DistinctLanguage
{
	DL_UNKNOWN = 0,
	DL_DEFAULT,
	DL_ENGLISH,
	DL_GERMAN,
	DL_SPANISH,
	DL_FRENCH,
	DL_JAPANESE,
	DL_COUNT
};

enum SpeechType
{
	UNKNOWN			= -1,
	TALK			= 0,	// normal system message
	PROMPT			= 1,	// Display as system prompt
	EMOTE			= 2,	// : text
	SAY				= 3,	// character speaking
	OBJ				= 4,	// at object
	NOTHING			= 5,	// does not display
	SYSTEM			= 6,	// text labelling an item
	NOSCROLL		= 7,	// status msg, does not scroll
	WHISPER			= 8,	// only those close can here
	YELL			= 9,	// can be heard 2 screens away
	ASCIITALK		= 0xC0,	// ASCII version of TALK, all ASCII stuff is | 0xC0'd
	ASCIIPROMPT		= 0xC1,
	ASCIIEMOTE		= 0xC2,
	ASCIISAY		= 0xC3,
	ASCIIOBJ		= 0xC4,
	ASCIINOTHING	= 0xC5,
	ASCIISYSTEM		= 0xC6,
	ASCIINOSCROLL	= 0xC7,
	ASCIIWHISPER	= 0xC8,
	ASCIIYELL		= 0xC9,
	BROADCAST		= 0xFF
};

enum FontType
{
	FNT_BOLD = 0,
	FNT_TEXT_WITH_SHADOW,
	FNT_BOLD_PLUS_SHADOW,
	FNT_NORMAL,
	FNT_GOTHIC,
	FNT_ITALIC,
	FNT_SMALL_DARK,
	FNT_COLOURFUL,
	FNT_RUNIC,		// Only use CAPS!
	FNT_SMALL_LIGHT,
	FNT_UNKNOWN
};

enum SpeechTarget
{
	SPTRG_INDIVIDUAL = 0,		// aimed at individual person
	SPTRG_PCS,					// all PCs in range
	SPTRG_PCNPC,				// all NPCs and PCs in range
	SPTRG_BROADCASTPC,				// ALL PCs everywhere + NPCs in range
	SPTRG_BROADCASTALL
};

enum SpeakerType
{
	SPK_SYSTEM = 0,
	SPK_CHARACTER,
	SPK_ITEM,
	SPK_UNKNOWN
};

enum GuildType
{
	GT_STANDARD = 0,
	GT_ORDER,
	GT_CHAOS,
	GT_UNKNOWN,
	GT_COUNT
};

enum GuildRelation
{
	GR_NEUTRAL = 0,
	GR_WAR,
	GR_ALLY,
	GR_UNKNOWN,
	GR_SAME,
	GR_COUNT
};

enum PickupLocations
{
	PL_NOWHERE = 0,
	PL_GROUND,
	PL_OWNPACK,
	PL_OTHERPACK,
	PL_PAPERDOLL,
	PL_BANK
};

enum WeatherType
{
	LIGHT = 0,
	RAIN,
	COLD,
	HEAT,
	LIGHTNING,
	SNOW,
	WEATHNUM
};

enum WorldType
{
	WRLD_SPRING = 0,
	WRLD_SUMMER,
	WRLD_AUTUMN,
	WRLD_WINTER,
	WRLD_DESOLATION,
	WRLD_UNKNOWN,
	WRLD_COUNT
};

// EXIT CODES
enum ErrorCodes
{
	UNKNOWN_ERROR = 666,
	FATAL_UOX3_JAVASCRIPT = 50,
	FATAL_UOX3_ALLOC_WORLDSTATE = 100,
	FATAL_UOX3_ALLOC_MAPREGIONS,
	FATAL_UOX3_ALLOC_ADMIN,
	FATAL_UOX3_ALLOC_BOATS,
	FATAL_UOX3_ALLOC_COMBAT,
	FATAL_UOX3_ALLOC_COMMANDS,
	FATAL_UOX3_ALLOC_GUILDS,
	FATAL_UOX3_ALLOC_GUMPS,
	FATAL_UOX3_ALLOC_ITEMS,
	FATAL_UOX3_ALLOC_MAP,
	FATAL_UOX3_ALLOC_NPCS,
	FATAL_UOX3_ALLOC_SKILLS,
	FATAL_UOX3_ALLOC_TOWNS,
	FATAL_UOX3_ALLOC_WEIGHT,
	FATAL_UOX3_ALLOC_TARG,
	FATAL_UOX3_ALLOC_NETWORK,
	FATAL_UOX3_ALLOC_MAGIC,
	FATAL_UOX3_ALLOC_RACES,
	FATAL_UOX3_ALLOC_SHOP,
	FATAL_UOX3_ALLOC_WEATHER,
	FATAL_UOX3_ALLOC_MOVE,
	FATAL_UOX3_ALLOC_EFFECTS,
	FATAL_UOX3_ALLOC_WHOLIST,
	FATAL_UOX3_ALLOC_DICTIONARY,
	FATAL_UOX3_ALLOC_BOOKS,
	FATAL_UOX3_ALLOC_PAGEVECTOR,
	FATAL_UOX3_ALLOC_ACCOUNTS,
	FATAL_UOX3_ALLOC_MAPREGION,
	FATAL_UOX3_ALLOC_TRIGGERS,
	FATAL_UOX3_ALLOC_SPEECH,
	FATAL_UOX3_ALLOC_SCRIPTS,

	FATAL_UOX3_CHARS = 150,
	FATAL_UOX3_TEFFECTS,

	FATAL_UOX3_ITEMS = 200,
	FATAL_UOX3_LOSCACHE,
	FATAL_UOX3_ITEMIDS,

	FATAL_UOX3_CREATE_UOXMENUS = 250,

	FATAL_UOX3_ALLOC_ITEMSP = 300,
	FATAL_UOX3_ALLOC_CHARSP,
	FATAL_UOX3_ALLOC_SPAWNSP,
	FATAL_UOX3_ALLOC_CSPAWNSP,


	FATAL_UOX3_MAP_NOT_FOUND = 350,
	FATAL_UOX3_STATICS_INDEX_NOT_FOUND,
	FATAL_UOX3_STATICS_NOT_FOUND,
	FATAL_UOX3_VERSION_NOT_FOUND,
	FATAL_UOX3_TILEDATA_NOT_FOUND,
	FATAL_UOX3_MULTI_DATA_NOT_FOUND,
	FATAL_UOX3_MULTI_INDEX_NOT_FOUND,

	FATAL_UOX3_DIR_NOT_FOUND = 400,
};

// List of skill numbers (For later implementation)
enum Skills
{
	ALCHEMY = 0,
	ANATOMY,
	ANIMALLORE,
	ITEMID,
	ARMSLORE,
	PARRYING,
	BEGGING,
	BLACKSMITHING,
	BOWCRAFT,
	PEACEMAKING,
	CAMPING,
	CARPENTRY,
	CARTOGRAPHY,
	COOKING ,
	DETECTINGHIDDEN ,
	ENTICEMENT ,
	EVALUATINGINTEL ,
	HEALING ,
	FISHING ,
	FORENSICS ,
	HERDING ,
	HIDING ,
	PROVOCATION ,
	INSCRIPTION ,
	LOCKPICKING ,
	MAGERY ,
	MAGICRESISTANCE ,
	TACTICS ,
	SNOOPING ,
	MUSICIANSHIP ,
	POISONING ,
	ARCHERY ,
	SPIRITSPEAK ,
	STEALING ,
	TAILORING ,
	TAMING ,
	TASTEID ,
	TINKERING ,
	TRACKING ,
	VETERINARY ,
	SWORDSMANSHIP ,
	MACEFIGHTING ,
	FENCING ,
	WRESTLING ,
	LUMBERJACKING ,
	MINING ,

	MEDITATION  ,
	STEALTH  ,
	REMOVETRAPS ,  // lb, have to be extacly the numbers the client sends !!


	ALLSKILLS , // #skills+1

	STRENGTH , // #skills+2
	DEXTERITY , // #skills+3
	INTELLECT , // #skills+4
	FAME , // #skills+5
	KARMA,  // #skills+6 
	SKILLS     // #skills+7
};

enum __TIMERID__ 
{
	TIMER_ERROR = -1,
	CORPSE_DECAY = 0,
	LOOT_DECAY,
	WEATHER,
	SHOP_SPAWN,
	DECAY,
	INVISIBILITY,
	OBJECT_USAGE,
	GATE,
	POISON,
	LOGIN_TIMEOUT,
	HITPOINT_REGEN,
	STAMINA_REGEN,
	MANA_REGEN,
	ARMORAFFECTMANA_REGEN,
	BASE_FISHING,
	RANDOM_FISHING,
	SPIRIT_SPEAK,
	BEGGING_T,
	PLAYER_CORPSE
};

enum ObjectType
{
	OT_CBO = 0,
	OT_CHAR,
	OT_ITEM,
	OT_MULTI
};

enum LoginDenyReason
{
	LDR_UNKNOWNUSER = 0,
	LDR_ACCOUNTINUSE,
	LDR_ACCOUNTDISABLED,
	LDR_BADPASSWORD,
	LDR_COMMSFAILURE,
	LDR_NODENY
};

enum ClientTypes
{
	CV_NORMAL = 0,
	CV_T2A,
	CV_UO3D,
	CV_XGM,
	CV_KRRIOS,
	CV_UNKNOWN,
	CV_COUNT
};

enum WeaponTypes
{
	DEF_SWORDS = 1,
	SLASH_SWORDS,
	ONEHND_LG_SWORDS,
	TWOHND_LG_SWORDS,
	BARDICHE,
	ONEHND_AXES,
	TWOHND_AXES,
	DEF_MACES,
	LG_MACES,
	BOWS,
	XBOWS,
	DEF_FENCING,
	TWOHND_FENCING
};

enum UOMapType
{
	UOMT_BRITANNIA = 0,
	UOMT_UNKNOWN1 = 1,
	UOMT_ILSHENAR = 2,
	UOMT_UNKNOWN2 = 3,
	UOMT_COUNT = 4,
	UOMT_UNKNOWN = 0xFF
};

enum BASE_BINARY_TAGS
{
	BASETAG_TITLE = 1,
	BASETAG_OBJ_TYPE,
	BASETAG_COLOR,
	BASETAG_KILLS,
	BASETAG_NOTOR,
	BASETAG_STATS,
	BASETAG_STATS2,
	BASETAG_MULTI,
	BASETAG_SPAWNER,
	BASETAG_OWNER,
	BASETAG_RACE,
	BASETAG_VIS,
	BASETAG_DISABLE,
	BASETAG_DAMAGE,
	BASETAG_DEF,
	BASETAG_SCPTRG,
	BASETAG_DWORDS,
	BASETAG_JS_STR_TAG,
	BASETAG_JS_INT_TAG,
};

enum CHAR_BINARY_TAGS
{
	CHARTAG_ACCOUNT = 64,
	CHARTAG_TXTCOLOR,
	CHARTAG_LASTON,
	CHARTAG_ORGNAME,
	CHARTAG_GUILDTITLE,
	CHARTAG_NPCAI,
	CHARTAG_MAKING,
	CHARTAG_TAMING,
	CHARTAG_WEIGHT,
	CHARTAG_HUNGER,
	CHARTAG_FIXEDLIGHT,
	CHARTAG_TOWN,
	CHARTAG_CARVE,
	CHARTAG_HOLD_G,
	CHARTAG_SPLIT,
	CHARTAG_ROBE,
	CHARTAG_GUILD,
	CHARTAG_POISONSER,
	CHARTAG_SUMMONTIMER,
	CHARTAG_ID2,
	CHARTAG_HAIR,
	CHARTAG_SKIN,
	CHARTAG_LEV,
	CHARTAG_F_X,
	CHARTAG_DISPZ,
	CHARTAG_STEALTH,
	CHARTAG_DIR2,
	CHARTAG_CELL,
	CHARTAG_NPCOPTS,
	CHARTAG_REGION,
	CHARTAG_PACK,
	CHARTAG_GATE,
	CHARTAG_SPA,
	CHARTAG_QUEST,
	CHARTAG_FLEE,
	CHARTAG_PRIVS,
	CHARTAG_BOOLS,
	CHARTAG_STATS2,
	CHARTAG_SKILLS,
	CHARTAG_ATROPH,
	CHARTAG_SKLOCKS,
	CHARTAG_NOTOR2,
	CHARTAG_DEATHS,
	CHARTAG_FONTSQ,
	CHARTAG_POISON,
};

enum ITEM_BINARY_TAGS
{
	ITEMTAG_LAYERCONT = 64,
	ITEMTAG_MORE,
	ITEMTAG_NAME2,
	ITEMTAG_MURDERER,
	ITEMTAG_CREATOR,
	ITEMTAG_DESC,
	ITEMTAG_TYPE,
	ITEMTAG_OFFSPELL,
	ITEMTAG_WEIGHT,
	ITEMTAG_MOREXYZ,
	ITEMTAG_AMOUNT,
	ITEMTAG_BOOLS,
	ITEMTAG_MAXHP,
	ITEMTAG_SPD_MG_PV,
	ITEMTAG_VALUE,
	ITEMTAG_POISONED,
	ITEMTAG_AC,
	ITEMTAG_MADEENH,
	ITEMTAG_GOOD,
	ITEMTAG_GLOW,
	ITEMTAG_CARVE,
	ITEMTAG_WEATHER,
	ITEMTAG_ENTRY,
	ITEMTAG_DOORDIR,

	MULTITAG_BAN,//88
	MULTITAG_OWNER,
	MULTITAG_LOCKDOWN,
	MULTITAG_MAXLOCK,
	//these 4 are not currently used, but reserved for future multi use
	MULTITAG_UNUSED1,
	MULTITAG_UNUSED2,
	MULTITAG_UNUSED3,
	MULTITAG_UNUSED4,

};

enum DEFINITIONCATEGORIES
{
	items_def		=	0,
	npc_def,
	create_def,
	regions_def,
	misc_def,
	skills_def,
	location_def,
	menus_def,
	spells_def,
	tracking_def,
	newbie_def,
	titles_def,
	advance_def,
	necro_def,
	house_def,
	colors_def,
	spawn_def,
	html_def,
	race_def,
	polymorph_def,
	weathab_def,
	hard_items_def,
	command_def,
	msgboard_def,
	carve_def,
	NUM_DEFS
};

#endif

