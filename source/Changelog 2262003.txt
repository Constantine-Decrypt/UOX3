26 Feb 2003
Overhauls/Additions/Major Changes
Changed:
	-Complete rewrite to the Weight system
		-Weight is more permanent, removed need to recalc it constantly
		-Packs now show the weight of themselves and all their contents
		-Packs now have a weight limit (currently hardcapped to 400, should make it based on type of container and possibly scriptable)
		-All items use the weight value given to them in the scripts unless the entry is 0 in which case they pull weight from the MUL's
		-Better handling of overloaded for teleport / recall / walking
		-Weight will max out at 65535 stones and can not go lower than 0 stones
	-Items container is now set as a cBaseObject

Tweaks/Object Conversions/Misc Small Changes
Changed:
	-Fixed up itemsfx() and renamed it to itemSound(), now better handles Gold sfx and where an item was dropped (ie in a pack or on the ground)
	-Cleaned up goldsfx() and renamed it to goldSound()
	-Many fixes to get/drop/wear/packItem functions
	-Minor fixes/cleanups in movement.cpp
	-Fixed a worldsave crash with tamed creatures
	-Pressing 0 in console reloads items as well as everything else
	-Made dagger usable for carve again
	-Fixed a horse mounting distance check
	-Noted (and in some cases fixed) unrefrenced variables throughout the code
Removed:
	-Removed calcLastContainerFromSer(), as the Get/SetCont() changes made it superfluous


18 Feb 2003
Overhauls/Additions/Major Changes
Added:
	-Added cItems::menuAddItem() to handle adding items from the add menu
	-Added handleCooking() in place of cSkills CookMeat(), MakeDough(), and MakePizza()
	-Added PlayInstrument() in place of PlayInstrumentWell() / PlayInstrumentPoor()
	-Added cSkills::doStealing() to take place of repetitious code in RandomSteal() and StealingTarget()
	-Added objInRange() functions in place of charInRange()/itemInRange() funcs

Changed:
	-Converted inscribe.gmp to inscribe.dfn and used NewMakeMenu() in favor of the old make menu system
	-Updated GetMagic() == 3 calls to IsLockedDown() calls (as that is all it should be used for)
	-Fixed up all IsLockedDown() calls, resources that are LockedDown can NOT be used, even by GM, until released
		-Also note, items that should be usable if locked: Skill items (looms, training dummies, etc, Recall runes)
	-Moved the two functions from newbie.cpp to pcmanage.cpp and removed newbie.cpp from the project
	-Moved action() and impaction() to effects.cpp
	-Moved isHuman() to npcs.cpp
	-Where possible made functions that were part of classes private
	-Made use of cCombat::getWeaponType() in doubleClick() to centralize searching for weapon ID's
	-Updated CDictionary to make use of IsValid and added wrapper functions for it
	-Moved keyInPack() to doors.cpp and made better use of it
	-Added support to NpcTalk for variable arguments
	-Added support to NpcTalkAll for variable arguments
	-Changed itemmessage() to objMessage() and added dictionary support to it
	-Went through and added language support to Dictionary->GetEntry() calls anywhere possible (note, should NOT use socket-based languages for: Console, Broadcasts, Item/Region/Char Names, Anything else?)
	-Broke doubleClick() into 3 functions, doubleClick(), handleDoubleClickTypes(), and handleDoubleClickIDs() to allow quicker viewing / editing
	-Cleaned up unneeded variables in the three aforementioned functions
Removed:
	-Trashed im.cpp/.h, MakeMenuTarget() and the rest of the old make menu system
	-Removed Gumps directory (as it is now unnecesarry)
	-Removed getCharDist() and getItemDist()
	-Removed make_st and cSkills::CalcRank()


Tweaks/Object Conversions/Misc Small Changes
Changed:
	-Removed iSGM() checks from all Dist functions, as it would cause wierdness in many areas of the code (Combat, for example)
	-NPC Movement issues addressed
		-Creatures following move faster (not just tamed)
		-Wander direction changes randomly
		-NPC movement slowed down alltogether
	-Attack flagging issues addressed/worked on
	-Combat bug causing you swing but never hit when diagonal from enemy fixed
	-Decay timer reset upon dropping an item on the ground
	-Cleanup of cItem::DecayItem()
	-Fixed an issue causing creatures to get stuck turning around when nearly dead
	-Fixed up amount functions to allow for UI32, should allow statwindow to properly display up to 4billion+ gold on a character, as well as allow high-cost item buy/sells
	-Changed CChar tailitem, GetTailItem() and SetTailItem() to an object pointer
	-Now can only mount a creature if it is tamed and owned by you
	-Changed GetAdvObj to a UI16, shouldn't need more than 65535 Advance.dfn entries
	-Get/SetSpawn() now check for INVALIDSERIAL instead of 0
	-Updated CChar::Get/SetSmeltItem() to an Object pointer
	-Changed UI32 ItemPtr() in tempeffects to cBaseObject *ObjPtr()
	-Changed cSocket::AddMItem() to a CItem
	-Used GetItemObj(), GetOwnerObj(), GetSpawnObj(), and GetMultiObj() where possible
	-Cleaned up CurrcharObj() usage
	-Changed CSkills::Snooping() to use an Object pointer rather than a Serial
	-Changed tempeffect() to use a CItem call instead of ITEM (and removed it alltogether from its CChar overload)
	-Changed nVialID in necro.cpp to now make use of cSocket::AddMItem() to allow an object pointer
	-Changed cTownRegion::DisplayTownMenu() to use an item pointer
	-Minor tweaks to Rank system
	-Fixed House Lockdowns, Items are now added to the Multi's LockDown list
	-Fixed a WorldSave crash caused by tempeffects, by adding teffect_st constructor
	-Possibly fixed MultiCaching bug, where container should have been UI32
	-Updated StoreItemRandomValue(), fixing some possible signed/unsigned issues
	-Updated calcLastContainerFromSer() to return a cBaseObject pointer
	-Fixed issue in checktempeffects() causing ITEM timers not to function
	-Changed CItem *Get/SetTailItem() to SERIAL Get/SetSkillItem()
	-Ensured SkillItem was being set back to INVALIDSERIAL after use
	-Fixed up cGumps::choice()
	-Fixed bug when npc attacked causing the emote to display incorrectly, also added "creature" is attacking you! emote for target only
	-Same fixes for players attacking
	-Updated npcEmoteAll() to handle variable arguments and updated calls to match
	-Used Socket-based language calls in Dictionary-GetEntry() wherever possible
	-Caught some missed text and put them in the dictionary.
	-Documented functions in speech.cpp
	-Made use of objInRange() wherever possible
	-Many signed/unsigned mismatch fixes
	-Minor optimizations and code cleanups

Removed:
	-Commented out old Alchemy stuff (alchemy.dfn in /create/ still needs work)
	-Removed unused respawntime global
	-Removed some unneeded typedefs
	-Removed many unnecesarry uses of char temp[]; sprintf( temp, Dict ); function( temp ); in favor of function( dict )
	-Removed unnecesarry overloads for the following functions:
		SpawnItem()
		GetItem()
		CItem::SetSpawn()
		CChar::SetSpawn()
		GetMulti()
		GetOwner()
		SetOwner()
		openPack()
		decItemAmount()
		CItem::ReleaseItem()

ToDo/In Progress
-For now broke engraving, it needs a rewrite (Note to self, inscription w/o the scroll usage on any item giving that item magical properties instead of creating a scroll)
-Put Garbage Collect/Cleanup and Respawn on a MapRegion for loop rather than itemcount loop